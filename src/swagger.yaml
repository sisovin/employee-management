openapi: 3.0.0
info:
  title: Employee Management API
  version: 1.0.0
  description: API for managing employees and authentication

servers:
  - url: http://localhost:8000/api

paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
  /auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /auth/logout:
    post:
      summary: Log out a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
  /auth/refresh-token:
    post:
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
  /employees:
    get:
      summary: Get all employees
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeesResponse'
    post:
      summary: Create a new employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeRequest'
      responses:
        '200':
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmployeeResponse'
  /employees/{id}:
    put:
      summary: Update an employee
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequest'
      responses:
        '200':
          description: Employee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeResponse'
    delete:
      summary: Delete an employee
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmployeeResponse'
  /roles:
    get:
      summary: Get all roles
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
    post:
      summary: Create a new role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        '200':
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
  /roles/{id}:
    put:
      summary: Update a role
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
      responses:
        '200':
          description: Role updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoleResponse'
    delete:
      summary: Delete a role
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleResponse'
  /permissions:
    get:
      summary: Get all permissions
      responses:
        '200':
          description: List of permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
    post:
      summary: Create a new permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
      responses:
        '200':
          description: Permission created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionResponse'
  /permissions/{id}:
    put:
      summary: Update a permission
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionResponse'
    delete:
      summary: Delete a permission
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Permission deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePermissionResponse'

components:
  schemas:
    SignupRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    SignupResponse:
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LogoutRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    LogoutResponse:
      type: object
      properties:
        message:
          type: string
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
    EmployeesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Employee'
    CreateEmployeeRequest:
      type: object
      properties:
        name:
          type: string
        position:
          type: string
        salary:
          type: number
      required:
        - name
        - position
        - salary
    CreateEmployeeResponse:
      type: object
      properties:
        message:
          type: string
    UpdateEmployeeRequest:
      type: object
      properties:
        name:
          type: string
        position:
          type: string
        salary:
          type: number
      required:
        - name
        - position
        - salary
    UpdateEmployeeResponse:
      type: object
      properties:
        message:
          type: string
    DeleteEmployeeResponse:
      type: object
      properties:
        message:
          type: string
    Employee:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: string
        salary:
          type: number
    RolesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Role'
    CreateRoleRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CreateRoleResponse:
      type: object
      properties:
        message:
          type: string
    UpdateRoleRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    UpdateRoleResponse:
      type: object
      properties:
        message:
          type: string
    DeleteRoleResponse:
      type: object
      properties:
        message:
          type: string
    Role:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    PermissionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    CreatePermissionRequest:
      type: object
      properties:
        name:
          type: string
        roleId:
          type: string
      required:
        - name
        - roleId
    CreatePermissionResponse:
      type: object
      properties:
        message:
          type: string
    UpdatePermissionRequest:
      type: object
      properties:
        name:
          type: string
        roleId:
          type: string
      required:
        - name
        - roleId
    UpdatePermissionResponse:
      type: object
      properties:
        message:
          type: string
    DeletePermissionResponse:
      type: object
      properties:
        message:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        roleId:
          type: string
